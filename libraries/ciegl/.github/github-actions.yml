name: CI

on:
  push:
    branches:
      - master
    paths-ignore:
      - "*.md"
      - "*.html"
      - "docs/*"
      - "*.gitignore"
      - "license"
      - "readme"
  workflow_dispatch:

concurrency:
  group: ci-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    steps:
      - name: Create python venv
        run: python3 -m venv penv
      - name: Clone repositories
        run: |
          for lib in "cieutils" "linalg" "geo" "ciegl"; do
            git clone https://github.com/kelofm/${lib}.git --depth 1
          done
      - name: Install packages
        run: |
          sudo apt install libopenmpi-dev catch2
           for lib in "cieutils" "linalg" "geo" "ciegl"; do
            if [ -f "$lib/dependencies_ubuntu.txt" ]; then
              sudo xargs apt install < $lib/dependencies_ubuntu.txt
            fi
          done
      - name: Build dependencies
        run: |
          source penv/bin/activate
          for lib in "cieutils" "linalg" "geo"; do
            ./$lib/build.sh -t Release
          done
      - name: Build
        run: |
          source penv/bin/activate
          ./ciegl/build.sh -t Release
      - name: Copy Artifact
        run: |
          source penv/bin/activate
          cp -r "$(python3 -c 'import sysconfig; print(sysconfig.get_paths()["purelib"])')/cie" .
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: binaries
          path: cie

  generate-docs:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Install packages
        run: sudo apt install findutils doxygen graphviz
      - name: Clone dependencies
        run: |
          for lib in "cieutils" "linalg" "geo" "ceigl"; do
            git clone https://github.com/kelofm/${lib}.git --depth 1
          done
      - name: Generate docs for dependencies
        run: |
          cd cieutils/docs
          TAGFILES=""
          doxygen doxyfile
          cd ../../linalg/docs
          TAGFILES="$TAGFILES ../../cieutils/docs/cieutils_doxygen_tagfile=../../../cieutils/docs/html"
          ( cat doxyfile ; echo "TAGFILES=$TAGFILES" ) | doxygen -
          cd ../../geo/docs
          TAGFILES="$TAGFILES ../../linalg/docs/linalg_doxygen_tagfile=../../../linalg/docs/html"
          ( cat doxyfile ; echo "TAGFILES=$TAGFILES" ) | doxygen -
      - name: Update doc branch with current master
        run: |
          cd ciegl
          git config --local user.name $USER_NAME
          git config --local user.email "in@valid.email"
          git branch -D doc &>/dev/null || true
          git checkout -b doc
        env:
          USER_NAME: matekelemen
      - name: Generate docs
        run: |
          cd ciegl/docs
          TAGFILES=""
          for lib in "cieutils" "linalg" "geo"; do
            TAGFILES="$TAGFILES ../../$lib/docs/${lib}_doxygen_tagfile=../../../$lib/docs/html"
          done
          ( cat doxyfile ; echo "TAGFILES=$TAGFILES" ) | doxygen -
      - name: Generate root index.html
        run: |
          cd ciegl
          echo "<meta http-equiv=\"refresh\" content=\"0; docs/html/index.html\">" > index.html
      - name: Update remote
        run: |
          cd ciegl
          git add index.html docs/html -f
          git commit -m "update docs"
          git push -f https://$USER_NAME:$GITHUB_TOKEN@github.com/kelofm/ciegl.git doc
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          USER_NAME: matekelemen
